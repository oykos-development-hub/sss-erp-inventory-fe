[{"filePath":"/builds/erp/inventory-fe/setupProxy.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/assessmentModal/assessmentModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/assessmentModal/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/deactivateModal/deactivateModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/deactivateModal/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/immovableAddForm/constants.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/immovableAddForm/immovableAddForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/immovableAddForm/types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/immovableDetailsForm/constants.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/immovableDetailsForm/immovableDetailsForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/immovableDetailsForm/style.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/immovableDetailsForm/types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/inventoryDispatchList/constants.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/inventoryDispatchList/inventoryDispatchList.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/inventoryDispatchList/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/inventoryList/inventoryList.tsx","messages":[{"ruleId":"indent","severity":2,"message":"Expected indentation of 10 spaces but found 8.","line":171,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":171,"endColumn":9,"fix":{"range":[5737,5745],"text":"          "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 10 spaces but found 8.","line":172,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":172,"endColumn":9,"fix":{"range":[5776,5784],"text":"          "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 14 spaces but found 16.","line":250,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":250,"endColumn":17,"fix":{"range":[8072,8088],"text":"              "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 16 spaces but found 18.","line":251,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":251,"endColumn":19,"fix":{"range":[8090,8108],"text":"                "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 16 spaces but found 18.","line":252,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":252,"endColumn":19,"fix":{"range":[8123,8141],"text":"                "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 16 spaces but found 18.","line":253,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":253,"endColumn":19,"fix":{"range":[8179,8197],"text":"                "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 14 spaces but found 16.","line":254,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":254,"endColumn":17,"fix":{"range":[8251,8267],"text":"              "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 14 spaces but found 16.","line":255,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":255,"endColumn":17,"fix":{"range":[8270,8286],"text":"              "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 16 spaces but found 18.","line":256,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":256,"endColumn":19,"fix":{"range":[8288,8306],"text":"                "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 16 spaces but found 18.","line":257,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":257,"endColumn":19,"fix":{"range":[8325,8343],"text":"                "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 14 spaces but found 16.","line":258,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":258,"endColumn":17,"fix":{"range":[8379,8395],"text":"              "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 14 spaces but found 16.","line":259,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":259,"endColumn":17,"fix":{"range":[8398,8414],"text":"              "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 16 spaces but found 18.","line":260,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":260,"endColumn":19,"fix":{"range":[8416,8434],"text":"                "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 16 spaces but found 18.","line":261,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":261,"endColumn":19,"fix":{"range":[8458,8476],"text":"                "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 16 spaces but found 18.","line":262,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":262,"endColumn":19,"fix":{"range":[8514,8532],"text":"                "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 14 spaces but found 16.","line":263,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":263,"endColumn":17,"fix":{"range":[8594,8610],"text":"              "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 14 spaces but found 16.","line":264,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":264,"endColumn":17,"fix":{"range":[8613,8629],"text":"              "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 16 spaces but found 18.","line":265,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":265,"endColumn":19,"fix":{"range":[8631,8649],"text":"                "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 16 spaces but found 18.","line":266,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":266,"endColumn":19,"fix":{"range":[8671,8689],"text":"                "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 14 spaces but found 16.","line":267,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":267,"endColumn":17,"fix":{"range":[8734,8750],"text":"              "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 12 spaces but found 14.","line":268,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":268,"endColumn":15,"fix":{"range":[8753,8767],"text":"            "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 14 spaces but found 16.","line":270,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":270,"endColumn":17,"fix":{"range":[8785,8801],"text":"              "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 16 spaces but found 18.","line":271,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":271,"endColumn":19,"fix":{"range":[8803,8821],"text":"                "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 16 spaces but found 18.","line":272,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":272,"endColumn":19,"fix":{"range":[8836,8854],"text":"                "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 16 spaces but found 18.","line":273,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":273,"endColumn":19,"fix":{"range":[8892,8910],"text":"                "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 14 spaces but found 16.","line":274,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":274,"endColumn":17,"fix":{"range":[8964,8980],"text":"              "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 14 spaces but found 16.","line":275,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":275,"endColumn":17,"fix":{"range":[8983,8999],"text":"              "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 16 spaces but found 18.","line":276,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":276,"endColumn":19,"fix":{"range":[9001,9019],"text":"                "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 16 spaces but found 18.","line":277,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":277,"endColumn":19,"fix":{"range":[9038,9056],"text":"                "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 14 spaces but found 16.","line":278,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":278,"endColumn":17,"fix":{"range":[9092,9108],"text":"              "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 14 spaces but found 16.","line":279,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":279,"endColumn":17,"fix":{"range":[9111,9127],"text":"              "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 16 spaces but found 18.","line":280,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":280,"endColumn":19,"fix":{"range":[9129,9147],"text":"                "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 16 spaces but found 18.","line":281,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":281,"endColumn":19,"fix":{"range":[9169,9187],"text":"                "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 14 spaces but found 16.","line":282,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":282,"endColumn":17,"fix":{"range":[9232,9248],"text":"              "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 12 spaces but found 14.","line":283,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":283,"endColumn":15,"fix":{"range":[9251,9265],"text":"            "}}],"suppressedMessages":[{"ruleId":"@typescript-eslint/ban-ts-comment","severity":2,"message":"Do not use \"@ts-ignore\" because it alters compilation errors.","line":246,"column":9,"nodeType":"Line","messageId":"tsDirectiveComment","endLine":246,"endColumn":22,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":35,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":35,"fixableWarningCount":0,"source":"import {Button, PrinterIcon, Table, TableHead, Theme} from 'client-library';\nimport React, {useEffect, useMemo, useRef, useState} from 'react';\nimport {\n  immovableInventoryTableHeads,\n  immovableTypeOptions,\n  movableInventoryTableHeads,\n  movableTypeOptions,\n  smallInventoryTableHeads,\n} from '../../screens/inventoryOverview/constants';\nimport {InventoryFilters, InventoryFiltersEnum} from '../../screens/inventoryOverview/types';\nimport useGetSettings from '../../services/graphQL/getSettings/useGetSettings';\nimport useOrgUnitOfficesGet from '../../services/graphQL/organizationUnitOffices/useOrganizationUnitOfficesGet';\nimport {DispatchType} from '../../types/graphQL/inventoryDispatch';\nimport {InventoryItem, SourceType} from '../../types/graphQL/inventoryOverview';\nimport {InventoryTypeEnum} from '../../types/inventoryType';\nimport {MicroserviceProps} from '../../types/micro-service-props';\nimport AssessmentModal from '../assessmentModal/assessmentModal';\nimport DeactivateModal from '../deactivateModal/deactivateModal';\nimport MovementModal from '../movementModal/movementModal';\nimport {FilterDropdown, FilterInput, Filters, ReversButtonContainer} from './styles';\n\ninterface InventoryListProps {\n  context: MicroserviceProps;\n  filters: (InventoryFiltersEnum | `${InventoryFiltersEnum}`)[];\n  tableData: InventoryItem[];\n  loading: boolean;\n  onFilter: (value: any, name: string) => void;\n  filterValues: InventoryFilters;\n  type: InventoryTypeEnum | `${InventoryTypeEnum}`;\n  refetch: () => void;\n}\n\nconst InventoryList = ({\n  context,\n  filters,\n  tableData,\n  loading,\n  onFilter,\n  filterValues,\n  type,\n  refetch,\n}: InventoryListProps) => {\n  const [selectedRows, setSelectedRows] = useState<number[]>([]);\n  const [movementType, setMovementType] = useState<DispatchType | `${DispatchType}`>();\n  const [deactivateModal, setDeactivateModal] = useState(false);\n  const [movementModal, setMovementModal] = useState(false);\n  const [estimationModal, setEstimationModal] = useState(false);\n  const [currentInventoryId, setCurrentInventoryId] = useState<number[]>([]);\n  const [currentItem, setCurrentItem] = useState<InventoryItem>();\n  const [sourceType, setSourceType] = useState<SourceType | `${SourceType}`>();\n  const [returnOrgUnitId, setReturnOrgUnitId] = useState<number>();\n  const prevStateRef = useRef<number[]>(selectedRows);\n  const orgUnitId = context?.contextMain?.organization_unit?.id;\n\n  const {options: officeOptions} = useOrgUnitOfficesGet({page: 1, size: 1000, id: Number(orgUnitId)});\n\n  const {options: amortizationGroupOptions} = useGetSettings({\n    entity: 'deprecation_types',\n  });\n\n  const {options: classTypeOptions} = useGetSettings({entity: 'inventory_class_type'});\n\n  const {\n    navigation: {navigate},\n  } = context;\n\n  //todo: add useMemo\n  const renderFilters = {\n    type: (\n      <FilterDropdown\n        name=\"source_type\"\n        value={filterValues.source_type}\n        onChange={value => onFilter(value, 'source_type')}\n        options={type === 'movable' ? movableTypeOptions : immovableTypeOptions}\n        placeholder=\"Odaberi tip\"\n        label=\"TIP:\"\n      />\n    ),\n    class: (\n      <FilterDropdown\n        name=\"class_type_id\"\n        value={filterValues.class_type_id}\n        onChange={value => onFilter(value, 'class_type_id')}\n        options={[{id: 0, title: 'Sve klase'}, ...classTypeOptions]}\n        placeholder=\"Odaberi klasu\"\n        label=\"KLASA:\"\n      />\n    ),\n    amortization_group: (\n      <FilterDropdown\n        name=\"depreciation_group\"\n        value={filterValues.depreciation_type_id}\n        onChange={value => onFilter(value, 'depreciation_type_id')}\n        options={[{id: 0, title: 'Sve grupe'}, ...amortizationGroupOptions]}\n        placeholder=\"Odaberi amortizacionu grupu\"\n        label=\"AMORTIZACIONA GRUPA:\"\n      />\n    ),\n    location: (\n      <FilterDropdown\n        name=\"office\"\n        value={filterValues.office_id}\n        onChange={value => onFilter(value, 'office_id')}\n        options={[{id: 0, title: 'Sve lokacije'}, ...officeOptions]}\n        placeholder=\"Odaberi lokaciju\"\n        label=\"LOKACIJA:\"\n      />\n    ),\n    search: (\n      <FilterInput\n        name=\"search\"\n        value={filterValues.search}\n        label=\"PRETRAGA:\"\n        placeholder=\"Pretraga\"\n        onChange={value => onFilter(value, 'search')}\n      />\n    ),\n  };\n\n  const onCheck = (checked: boolean, currId: number | null) => {\n    if (checked && currId) {\n      setSelectedRows([...selectedRows, currId]);\n    } else {\n      setSelectedRows(selectedRows.filter(id => id !== currId));\n    }\n  };\n\n  const onDeactivate = () => {\n    console.log('deactivating');\n  };\n\n  const onAddEstimation = (row: InventoryItem) => {\n    setCurrentInventoryId([row.id]);\n    setEstimationModal(true);\n  };\n\n  const onCloseMovementModal = (resetCheckboxes?: boolean) => {\n    setMovementModal(false);\n    setCurrentItem(undefined);\n    setSourceType(undefined);\n    setMovementType(undefined);\n\n    if (resetCheckboxes) {\n      setSelectedRows([]);\n    }\n  };\n\n  const onReversClick = () => {\n    setMovementType(sourceType?.includes('1') ? 'revers' : 'return-revers');\n\n    setCurrentInventoryId(selectedRows);\n    setMovementModal(true);\n  };\n\n  const onAddMovement = (item: InventoryItem) => {\n    const movementType =\n      item.source_type === 'NS1' ? 'revers' : item.source_type === 'NS2' ? 'return-revers' : 'allocation';\n\n    setSourceType(sourceType);\n    setMovementType(movementType);\n    setCurrentInventoryId([item.id]);\n    setCurrentItem(item);\n    setMovementModal(true);\n  };\n\n  const getTableHeads = useMemo(() => {\n    const heads: TableHead[] =\n      type === 'movable'\n        ? movableInventoryTableHeads\n        : type === 'immovable'\n        ? immovableInventoryTableHeads\n        : smallInventoryTableHeads;\n\n    return [\n      ...heads,\n      {\n        title: '',\n        customElement:\n          type === 'small' ? null : (\n            <ReversButtonContainer>\n              <Button\n                content={sourceType?.includes('2') ? 'Povrat' : 'Revers'}\n                variant=\"primary\"\n                size=\"sm\"\n                onClick={onReversClick}\n                disabled={!selectedRows.length}\n              />\n            </ReversButtonContainer>\n          ),\n        accessor: 'TABLE_ACTIONS',\n        type: 'tableActions',\n      },\n    ] as TableHead[];\n  }, [type, sourceType, selectedRows]);\n\n  const isReversDone = (row: InventoryItem) => {\n    return (\n      row.source_type?.includes('1') &&\n      row.organization_unit?.id !== row.target_organization_unit?.id &&\n      row.target_organization_unit !== null\n    );\n  };\n\n  const isCheckboxDisabled = (row: InventoryItem) => {\n    if (isReversDone(row)) {\n      return true;\n    }\n\n    if (selectedRows.length && sourceType) {\n      if (row.source_type.includes('2') && sourceType?.includes('2')) {\n        const currentOrgUnitId = tableData.find(item => item.id === selectedRows[0])?.organization_unit.id;\n        setReturnOrgUnitId(currentOrgUnitId);\n        return row.organization_unit.id !== currentOrgUnitId;\n      } else {\n        return row.source_type !== sourceType;\n      }\n    } else {\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    if (prevStateRef.current && !prevStateRef.current.length && selectedRows.length === 1) {\n      const currentItemId = selectedRows[0];\n      const currentItem = tableData.find(item => item.id === currentItemId);\n\n      setSourceType(currentItem?.source_type);\n    }\n\n    if (!selectedRows.length) {\n      setSourceType(undefined);\n    }\n  }, [selectedRows]);\n\n  return (\n    <div>\n      <Filters>{filters.map(filter => React.cloneElement(renderFilters[filter], {key: filter}))}</Filters>\n      <Table\n        tableHeads={getTableHeads}\n        isLoading={loading}\n        data={tableData}\n        checkedRows={selectedRows}\n        checkboxes={type !== 'small'}\n        onCheck={onCheck}\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        tableActions={\n          type !== 'small'\n            ? [\n                {\n                  name: 'print',\n                  onClick: row => console.log('print'),\n                  icon: <PrinterIcon stroke={Theme.palette.gray600} />,\n                },\n                {\n                  name: 'Alokacija',\n                  onClick: row => onAddMovement(row),\n                },\n                {\n                  name: 'Dodaj procjenu',\n                  onClick: row => onAddEstimation(row),\n                  shouldRender: (item: any) => item.source_type?.includes('1'),\n                },\n                {\n                  name: 'Deaktivacija',\n                  onClick: row => console.log('Deaktivacija'),\n                },\n              ]\n            : [\n                {\n                  name: 'print',\n                  onClick: row => console.log('print'),\n                  icon: <PrinterIcon stroke={Theme.palette.gray600} />,\n                },\n                {\n                  name: 'Alokacija',\n                  onClick: row => onAddMovement(row),\n                },\n                {\n                  name: 'Deaktivacija',\n                  onClick: row => console.log('Deaktivacija'),\n                },\n              ]\n        }\n        onRowClick={(item: any) => navigate(`/inventory/${type}-inventory/${item.id}`)}\n        disabledCheckbox={isCheckboxDisabled}\n      />\n      {/* //TODO ID 1 IS ONLY FOR TESTING, REMOVE LATER */}\n      {deactivateModal && (\n        <DeactivateModal onClose={() => setDeactivateModal(false)} onDeactivate={(e: any) => console.log(e)} id={0} />\n      )}\n      {movementModal && (\n        <MovementModal\n          context={context}\n          initialDispatchType={movementType}\n          onClose={onCloseMovementModal}\n          id={currentInventoryId}\n          refetch={refetch}\n          sourceType={sourceType}\n          returnOrgUnitId={returnOrgUnitId}\n          inventoryType={type}\n          currentItem={currentItem}\n        />\n      )}\n      {estimationModal && (\n        <AssessmentModal context={context} onClose={() => setEstimationModal(false)} id={currentInventoryId[0]} />\n      )}\n    </div>\n  );\n};\n\nexport default InventoryList;\n","usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/inventoryList/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/inventoryTabs/inventoryTabs.tsx","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/ban-ts-comment","severity":2,"message":"Do not use \"@ts-ignore\" because it alters compilation errors.","line":22,"column":3,"nodeType":"Line","messageId":"tsDirectiveComment","endLine":22,"endColumn":16,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/inventoryTabs/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/movableAddForm/constants.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/movableAddForm/movableAddForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/movableAddForm/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/movableAddForm/types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/movableDetailsForm/constants.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/movableDetailsForm/movableDetailsForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/movableDetailsForm/style.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/movableDetailsForm/types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/movementModal/constants.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/movementModal/movementModal.tsx","messages":[{"ruleId":"indent","severity":2,"message":"Expected indentation of 10 spaces but found 8.","line":126,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":126,"endColumn":9,"fix":{"range":[4463,4471],"text":"          "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 10 spaces but found 8.","line":127,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":127,"endColumn":9,"fix":{"range":[4501,4509],"text":"          "}},{"ruleId":"@typescript-eslint/no-non-null-assertion","severity":1,"message":"Forbidden non-null assertion.","line":152,"column":31,"nodeType":"TSNonNullExpression","messageId":"noNonNull","endLine":152,"endColumn":106},{"ruleId":"@typescript-eslint/no-non-null-assertion","severity":1,"message":"Forbidden non-null assertion.","line":159,"column":47,"nodeType":"TSNonNullExpression","messageId":"noNonNull","endLine":159,"endColumn":109}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import {Dropdown, Modal} from 'client-library';\nimport {useEffect, useMemo} from 'react';\nimport {Controller, useForm} from 'react-hook-form';\nimport useDispatchInsert from '../../services/graphQL/dispatchInsert/useDispatchInsert';\nimport useOrgUnitOfficesGet from '../../services/graphQL/organizationUnitOffices/useOrganizationUnitOfficesGet';\nimport useOrganizationUnits from '../../services/graphQL/organizationUnits/useOrganizationUnits';\nimport useUserProfiles from '../../services/graphQL/userProfileOverview/useUserProfileOverview';\nimport {DropdownDataNumber, DropdownDataString} from '../../types/dropdownData';\nimport {DispatchType} from '../../types/graphQL/inventoryDispatch';\nimport {InventoryItem, SourceType} from '../../types/graphQL/inventoryOverview';\nimport {MicroserviceProps} from '../../types/micro-service-props';\nimport {MovementForm} from './styles';\nimport {InventoryTypeEnum} from '../../types/inventoryType';\nimport {immovableTransactionOptions, movableTransactionOptions, smallTransactionOptions} from './constants';\n\ninterface MovementModalProps {\n  context: MicroserviceProps;\n  onClose: (resetCheckboxes?: boolean) => void;\n  id: number[];\n  initialDispatchType?: DispatchType | `${DispatchType}`;\n  sourceType?: SourceType | `${SourceType}`;\n  refetch: () => void;\n  returnOrgUnitId?: number;\n  inventoryType: InventoryTypeEnum | `${InventoryTypeEnum}`;\n  currentItem?: InventoryItem;\n}\n\nconst initialFormData: MovementModalForm = {\n  transaction: null,\n  target_user_profile_id: null,\n  target_organization_unit_id: null,\n  office_id: null,\n  serial_number: '',\n};\n\ninterface MovementModalForm {\n  transaction: DropdownDataString | null;\n  target_user_profile_id: DropdownDataNumber | null;\n  target_organization_unit_id?: DropdownDataNumber | null;\n  office_id: DropdownDataNumber | null;\n  serial_number: string;\n}\n\nconst MovementModal = ({\n  context,\n  onClose,\n  initialDispatchType,\n  sourceType,\n  id,\n  refetch,\n  returnOrgUnitId,\n  inventoryType,\n  currentItem,\n}: MovementModalProps) => {\n  const {\n    handleSubmit,\n    formState: {errors, isValid},\n    control,\n    watch,\n    setValue,\n  } = useForm<MovementModalForm>({\n    defaultValues: initialFormData,\n  });\n\n  const {alert} = context;\n  const orgUnit = context.contextMain.organization_unit.title;\n  const orgUnitId = context.contextMain.organization_unit.id;\n\n  const {options: officeOptions} = useOrgUnitOfficesGet({page: 1, size: 1000, id: Number(orgUnitId)});\n  const {options: locationOptions} = useOrganizationUnits(true);\n  const {options: userOptions} = useUserProfiles({page: 1, size: 1000, organization_unit_id: orgUnitId});\n\n  const returnReversOption: DropdownDataString[] = [{id: orgUnit, title: orgUnit}];\n\n  const {mutate, loading: isSaving} = useDispatchInsert();\n\n  const onSubmit = (values: MovementModalForm) => {\n    if (isValid && !isSaving) {\n      const data = {\n        source_user_profile_id: 1,\n        target_user_profile_id: values.target_user_profile_id?.id ?? 0,\n        source_organization_unit_id: orgUnitId,\n        target_organization_unit_id: values.target_organization_unit_id?.id ?? 0,\n        serial_number: '',\n        office_id: values.office_id?.id ?? 0,\n        type: (values.transaction?.id as DispatchType) ?? '',\n        dispatch_description: '',\n        inventory_id: id,\n      };\n      try {\n        const successTypeString =\n          initialDispatchType === 'revers' ? 'revers' : initialDispatchType === 'allocation' ? 'kretanje' : 'povrat';\n        const errorTypeString =\n          initialDispatchType === 'revers' ? 'reversa' : initialDispatchType === 'allocation' ? 'kretanja' : 'povrata';\n\n        mutate(\n          data,\n          () => {\n            alert.success(`Uspješno ste izvršili ${successTypeString}`);\n            onClose(initialDispatchType === 'revers');\n            refetch();\n          },\n          () => {\n            alert.error(`Došlo je do greške prilikom ${errorTypeString} sredstva.`);\n          },\n        );\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n\n  const isReversDone = (row: InventoryItem) => {\n    return (\n      row.source_type?.includes('1') &&\n      row.organization_unit?.id !== row.target_organization_unit?.id &&\n      row.target_organization_unit !== null\n    );\n  };\n\n  const transactionOptionsToShow = useMemo(() => {\n    const options =\n      inventoryType === 'movable'\n        ? movableTransactionOptions\n        : inventoryType === 'immovable'\n        ? immovableTransactionOptions\n        : smallTransactionOptions;\n\n    return options.filter(option => {\n      const optionsToRemove = [];\n\n      if (sourceType?.includes('2') || (currentItem && isReversDone(currentItem))) {\n        optionsToRemove.push('revers');\n      }\n      if (sourceType?.includes('1')) {\n        optionsToRemove.push('return-revers');\n      }\n\n      return optionsToRemove.every(optionToRemove => optionToRemove !== option.id);\n    });\n  }, [sourceType, inventoryType, initialDispatchType]);\n\n  const transactionType = watch('transaction')?.id;\n\n  const buttonText =\n    transactionType === 'revers' ? 'Revers' : transactionType === 'allocation' ? 'Premjesti' : 'Povrat';\n\n  useEffect(() => {\n    if (initialDispatchType) {\n      setValue(\n        'transaction',\n        initialDispatchType ? transactionOptionsToShow.find(option => option.id === initialDispatchType)! : null,\n      );\n    }\n  }, [initialDispatchType, transactionOptionsToShow]);\n\n  useEffect(() => {\n    if (locationOptions.length && initialDispatchType && returnOrgUnitId && initialDispatchType === 'return-revers') {\n      setValue('target_organization_unit_id', locationOptions.find(option => option.id === returnOrgUnitId)!);\n    }\n  }, [returnOrgUnitId, initialDispatchType, locationOptions]);\n\n  return (\n    <Modal\n      open={true}\n      onClose={onClose}\n      title=\"DODAJ KRETANJE\"\n      leftButtonOnClick={onClose}\n      rightButtonOnClick={handleSubmit(onSubmit)}\n      rightButtonText={buttonText}\n      buttonLoading={isSaving}\n      leftButtonText=\"Otkaži\"\n      content={\n        <MovementForm>\n          <Controller\n            name=\"transaction\"\n            control={control}\n            rules={{required: 'Ovo polje je obavezno'}}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                options={transactionOptionsToShow}\n                label=\"TRANSAKCIJA:\"\n                error={errors.transaction?.message}\n              />\n            )}\n          />\n          {transactionType === 'revers' && (\n            <Controller\n              name=\"target_organization_unit_id\"\n              control={control}\n              rules={{required: 'Ovo polje je obavezno'}}\n              render={({field: {name, value, onChange}}) => (\n                <Dropdown\n                  name={name}\n                  value={value}\n                  onChange={onChange}\n                  options={locationOptions}\n                  label=\"LOKACIJA:\"\n                  error={errors.target_organization_unit_id?.message}\n                />\n              )}\n            />\n          )}\n          {transactionType === 'return-revers' && (\n            <Controller\n              name=\"target_organization_unit_id.title\"\n              control={control}\n              render={({field: {name}}) => (\n                <Dropdown\n                  name={name}\n                  options={returnReversOption}\n                  placeholder={orgUnit}\n                  label=\"LOKACIJA:\"\n                  isDisabled={true}\n                />\n              )}\n            />\n          )}\n          {transactionType === 'allocation' && (\n            <Controller\n              name=\"target_user_profile_id\"\n              control={control}\n              rules={{required: 'Ovo polje je obavezno'}}\n              render={({field: {name, value, onChange}}) => (\n                <Dropdown\n                  name={name}\n                  value={value}\n                  onChange={onChange}\n                  options={userOptions}\n                  label=\"PRIMALAC:\"\n                  error={errors.target_user_profile_id?.message}\n                />\n              )}\n            />\n          )}\n          {transactionType === 'allocation' && (\n            <Controller\n              name=\"office_id\"\n              control={control}\n              rules={{required: 'Ovo polje je obavezno'}}\n              render={({field: {name, value, onChange}}) => (\n                <Dropdown\n                  name={name}\n                  value={value}\n                  onChange={onChange}\n                  options={officeOptions}\n                  label=\"LOKACIJA:\"\n                  error={errors.office_id?.message}\n                />\n              )}\n            />\n          )}\n        </MovementForm>\n      }\n    />\n  );\n};\n\nexport default MovementModal;\n","usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/movementModal/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/receiveInventoryModal/constants.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/receiveInventoryModal/receiveInventoryModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/smallDetailsForm/constants.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/smallDetailsForm/smallDetailsForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/smallDetailsForm/style.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/smallDetailsForm/types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/smallInventoryForm/constants.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/smallInventoryForm/smallInventoryForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/components/smallInventoryForm/types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/constants.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/context/accountingModuleContext.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/context/useAppContext.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/index.tsx","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/ban-ts-comment","severity":2,"message":"Do not use \"@ts-ignore\" because it alters compilation errors.","line":12,"column":3,"nodeType":"Line","messageId":"tsDirectiveComment","endLine":12,"endColumn":16,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/ban-ts-comment","severity":2,"message":"Do not use \"@ts-ignore\" because it alters compilation errors.","line":18,"column":5,"nodeType":"Line","messageId":"tsDirectiveComment","endLine":18,"endColumn":18,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/ban-ts-comment","severity":2,"message":"Do not use \"@ts-ignore\" because it alters compilation errors.","line":22,"column":3,"nodeType":"Line","messageId":"tsDirectiveComment","endLine":22,"endColumn":16,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/ban-ts-comment","severity":2,"message":"Do not use \"@ts-ignore\" because it alters compilation errors.","line":25,"column":5,"nodeType":"Line","messageId":"tsDirectiveComment","endLine":25,"endColumn":18,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/router.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/screens/404.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/screens/index.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/screens/inventoryAdd/constants.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/screens/inventoryAdd/inventoryAdd.tsx","messages":[{"ruleId":"indent","severity":2,"message":"Expected indentation of 18 spaces but found 20.","line":210,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":210,"endColumn":21,"fix":{"range":[7079,7099],"text":"                  "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 20 spaces but found 22.","line":211,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":211,"endColumn":23,"fix":{"range":[7101,7123],"text":"                    "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 20 spaces but found 22.","line":212,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":212,"endColumn":23,"fix":{"range":[7139,7161],"text":"                    "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 20 spaces but found 22.","line":213,"column":1,"nodeType":"Identifier","messageId":"wrongIndentation","endLine":213,"endColumn":23,"fix":{"range":[7254,7276],"text":"                    "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 18 spaces but found 20.","line":214,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":214,"endColumn":21,"fix":{"range":[7330,7350],"text":"                  "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 16 spaces but found 18.","line":215,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":215,"endColumn":19,"fix":{"range":[7353,7371],"text":"                "}}],"suppressedMessages":[{"ruleId":"@typescript-eslint/ban-ts-comment","severity":2,"message":"Do not use \"@ts-ignore\" because it alters compilation errors.","line":65,"column":21,"nodeType":"Line","messageId":"tsDirectiveComment","endLine":65,"endColumn":34,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/ban-ts-comment","severity":2,"message":"Do not use \"@ts-ignore\" because it alters compilation errors.","line":85,"column":17,"nodeType":"Line","messageId":"tsDirectiveComment","endLine":85,"endColumn":30,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":6,"fixableWarningCount":0,"source":"import {Button, Dropdown, Input, TableHead, Theme, TrashIcon, Typography} from 'client-library';\nimport {useEffect, useState} from 'react';\nimport {Controller, FormProvider, useFieldArray, useForm} from 'react-hook-form';\nimport ImmovableAddForm from '../../components/immovableAddForm/immovableAddForm';\nimport MovableAddForm from '../../components/movableAddForm/movableAddForm';\nimport SmallInventoryForm from '../../components/smallInventoryForm/smallInventoryForm';\nimport useGetSettings from '../../services/graphQL/getSettings/useGetSettings';\nimport useInventoryInsert from '../../services/graphQL/inventoryInsert/useInventoryInsert';\nimport {InventoryProps} from '../../types/inventoryProps';\nimport {parseDateForBackend} from '../../utils/dateUtils';\nimport {newTableItem, tableHeads} from './constants';\nimport {mockTableData} from './mockData';\nimport {ButtonContainer, StyledTable} from './styles';\nimport {DropdownName, InputName, TableItemValues, TableValues, valuesType} from './types';\n\nconst InventoryAdd = ({context, type}: InventoryProps) => {\n  const [isOrderListSelected, setIsOrderListSelected] = useState(false);\n  const isImmovable = type === 'immovable';\n\n  const {\n    alert,\n    navigation: {navigate},\n  } = context;\n\n  const methods = useForm<TableValues>();\n  const {\n    register,\n    handleSubmit,\n    control,\n    reset,\n    formState: {errors, isValid},\n    watch,\n  } = methods;\n\n  const {fields, append, remove} = useFieldArray({\n    control,\n    name: 'items',\n  });\n  const {options: amortizationGroupOptions} = useGetSettings({entity: 'deprecation_types'});\n\n  const {options: classOptions} = useGetSettings({entity: 'inventory_class_type'});\n  const {mutate} = useInventoryInsert();\n\n  const updatedTableHeads = tableHeads.map((head: TableHead) => {\n    const isDisabled = (head.accessor === 'title' || head.accessor === 'gross_price') && isOrderListSelected;\n    const options = head.accessor === 'class_type' ? classOptions : amortizationGroupOptions;\n\n    if (head.type === 'custom') {\n      if (head.accessor === 'class_type' || head.accessor === 'depreciation_type') {\n        return {\n          ...head,\n          renderContents: (_: any, __: any, index: any) => {\n            return (\n              <Controller\n                name={`items.${index}.${head.accessor}` as DropdownName}\n                rules={{required: 'Ovo polje je obavezno'}}\n                control={control}\n                render={({field: {name, value, onChange}}) => (\n                  <Dropdown\n                    name={name}\n                    value={value}\n                    onChange={onChange}\n                    options={options}\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    error={errors?.items?.[index]?.[`${head.accessor}`]?.message}\n                  />\n                )}\n              />\n            );\n          },\n        } as TableHead;\n      } else {\n        return {\n          ...head,\n          renderContents: (_: any, __: any, index: any) => {\n            return (\n              <Input\n                type={head.accessor === 'gross_price' ? 'number' : 'text'}\n                {...register(`items.${index}.${head.accessor}` as InputName, {\n                  required: head.accessor !== 'description' ? 'Ovo polje je obavezno' : false,\n                })}\n                disabled={isDisabled}\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore\n                error={errors?.items?.[index]?.[`${head.accessor}`]?.message}\n              />\n            );\n          },\n        } as TableHead;\n      }\n    } else return head;\n  });\n\n  // handlers:\n\n  const onSubmit = async (values: any) => {\n    if (isValid) {\n      const data = values.items.map((item: any) => ({\n        // form data\n        id: 0,\n        date_of_purchase: parseDateForBackend(values.date_of_purchase) || '',\n        source: values.source.id,\n        office_id: values.office.id,\n        invoice_number: Number(values.invoice_number),\n        supplier_id: values.supplier.id,\n\n        // item data\n        depreciation_type_id: item.depreciation_type.id,\n        class_type_id: item.class_type.id,\n        inventory_number: item.inventory_number,\n        title: item.title,\n        description: item.description,\n        gross_price: Number(item.gross_price),\n        serial_number: item.serial_number,\n\n        // other\n        type: type,\n        real_estate: null,\n        abbreviation: '',\n        internal_ownership: true,\n        location: '', //?\n        target_user_profile_id: 1,\n        unit: '',\n        amount: 1, // default 1\n        net_price: 1,\n        donor_title: '',\n        price_of_assessment: 0,\n        date_of_assessment: null,\n        lifetime_of_assessment_in_months: 0,\n        active: false,\n        deactivation_description: '',\n        invoice_file_id: 0,\n        file_id: 0,\n      }));\n\n      await mutate(\n        data,\n        () => {\n          alert.success('Uspjšeno dodavanje osnovnih sredstava');\n          navigate(`/inventory/${type}-inventory`);\n        },\n        () => alert.error('Neuspjšeno dodavanje osnovnih sredstava'),\n      );\n    }\n  };\n\n  const clearButtonClick = () => {\n    reset(); // reset form\n    remove(); // clear table\n    setIsOrderListSelected(false);\n  };\n\n  const handleFormSubmit = (values: valuesType) => {\n    if (!isImmovable) {\n      if (values && 'order_list' in values && values.order_list) {\n        remove(); // clear table\n        setIsOrderListSelected(true);\n        const articles: TableItemValues[] =\n          values?.articles?.map(item => ({\n            id: 0,\n            class_type: {id: 1, title: 'Class 1'},\n            depreciation_type: {id: 1, title: 'Amortizaciona grupa'},\n            inventory_number: '',\n            title: item.title,\n            serial_number: '',\n            gross_price: item?.total_price?.toString(),\n            description: '',\n          })) || [];\n        append(articles); // should append data from selected order_list\n      } else append(newTableItem);\n    }\n  };\n\n  const calculateTotal = () => {\n    const items = watch('items');\n    let sum = 0;\n    if (items) {\n      items.forEach((item: TableItemValues) => {\n        const price = parseFloat(item?.gross_price?.toString() || '0');\n        sum += price;\n      });\n    }\n    return sum;\n  };\n\n  const renderFormByType = {\n    movable: <MovableAddForm context={context} onFormSubmit={handleFormSubmit} />,\n    immovable: <ImmovableAddForm context={context} />,\n    small: <SmallInventoryForm context={context} onFormSubmit={handleFormSubmit} />,\n  };\n\n  useEffect(() => {\n    calculateTotal();\n  }, [watch('items')]);\n\n  return (\n    <FormProvider {...methods}>\n      {renderFormByType[type]}\n\n      {!isImmovable && (\n        <>\n          <StyledTable\n            data={fields as TableItemValues[]}\n            tableHeads={updatedTableHeads}\n            tableActions={\n              isOrderListSelected\n                ? []\n                : [\n                    {\n                      name: 'delete',\n                      onClick: (item: TableItemValues) => remove(fields.findIndex(field => field.id === item.id)),\n                      icon: <TrashIcon stroke={Theme?.palette?.gray800} />,\n                    },\n                  ]\n            }\n            style={{marginBottom: '20px'}}\n          />\n\n          <Input\n            label=\"TOTAL:\"\n            style={{width: '300px'}}\n            value={calculateTotal().toString()}\n            leftContent={<Typography content=\"€\" />}\n            disabled\n          />\n\n          <ButtonContainer>\n            <Button content=\"Odustani\" onClick={clearButtonClick} />\n            <Button content=\"Dodaj u inventar\" onClick={handleSubmit(onSubmit)} variant=\"primary\" />\n          </ButtonContainer>\n        </>\n      )}\n    </FormProvider>\n  );\n};\nexport default InventoryAdd;\n","usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/screens/inventoryAdd/mockData.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/screens/inventoryAdd/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/screens/inventoryAdd/types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/screens/inventoryDetails/constants.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/screens/inventoryDetails/inventoryDetails.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/screens/inventoryDetails/style.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/screens/inventoryDetails/types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/screens/inventoryDispatch/constants.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/screens/inventoryDispatch/inventoryDispatch.tsx","messages":[{"ruleId":"@typescript-eslint/no-non-null-assertion","severity":1,"message":"Forbidden non-null assertion.","line":42,"column":20,"nodeType":"TSNonNullExpression","messageId":"noNonNull","endLine":42,"endColumn":31}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {Pagination} from 'client-library';\nimport {useState} from 'react';\nimport InventoryDispatchList from '../../components/inventoryDispatchList/inventoryDispatchList';\nimport {PAGE_SIZE} from '../../constants';\nimport useInventoryDispatchOverview from '../../services/graphQL/inventoryDispatchOverview/useInventoryDispatchOverview';\nimport {InventoryProps} from '../../types/inventoryProps';\nimport {initialReceiveFilterValues} from './constants';\nimport {InventoryDispatchFilters} from './types';\n\nconst InventoryDispatch = ({context}: InventoryProps) => {\n  const [page, setPage] = useState<number>(0);\n  const [filterValues, setFilterValues] = useState<InventoryDispatchFilters>(initialReceiveFilterValues);\n\n  const onFilter = (value: any, name: string) => {\n    setFilterValues({...filterValues, [name]: value});\n  };\n  const type = context.navigation.location.pathname.split('/')[2] === 'movable-inventory' ? 'movable' : 'unmovable';\n\n  const {data, refetch, loading} = useInventoryDispatchOverview({\n    page,\n    size: PAGE_SIZE,\n    ...filterValues,\n    type: type,\n    id: 0,\n  });\n\n  const onPageChange = (page: number) => {\n    setPage(page);\n  };\n\n  return (\n    <div>\n      <InventoryDispatchList\n        refetch={refetch}\n        context={context}\n        tableData={data.items}\n        loading={loading}\n        onFilter={onFilter}\n        filterValues={filterValues}\n      />\n      <Pagination\n        pageCount={data.total! / PAGE_SIZE}\n        onChange={onPageChange}\n        variant=\"filled\"\n        itemsPerPage={PAGE_SIZE}\n        previousLabel=\"Previous\"\n        nextLabel=\"Next\"\n        pageRangeDisplayed={3}\n        style={{marginTop: '20px'}}\n      />\n    </div>\n  );\n};\n\nexport default InventoryDispatch;\n","usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/screens/inventoryDispatch/types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/screens/inventoryOverview/constants.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/screens/inventoryOverview/inventoryOverview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/screens/inventoryOverview/types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/screens/landing.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/screens/router.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/services/constants.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/services/get-environment.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/services/graphQL/assessmentInsert/assessmentInsert.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/services/graphQL/assessmentInsert/useAssessmentInsert.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/services/graphQL/dispatchInsert/dispatchInsert.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/services/graphQL/dispatchInsert/useDispatchInsert.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/services/graphQL/getOrderList/getOrderList.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/services/graphQL/getOrderList/useGetOrderList.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/services/graphQL/getSettings/useGetSettings.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/services/graphQL/index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/services/graphQL/inventoryDetails/inventoryDetailsGet.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/services/graphQL/inventoryDetails/useInventoryDetailsGet.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/services/graphQL/inventoryDispatchAccept/inventoryDispatchAccept.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/services/graphQL/inventoryDispatchAccept/useInventoryDispatchAccept.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/services/graphQL/inventoryDispatchOverview/inventoryDispatchOverview.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/services/graphQL/inventoryDispatchOverview/useInventoryDispatchOverview.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/services/graphQL/inventoryDispatchReject/inventoryDispatchReject.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/services/graphQL/inventoryDispatchReject/useInventoryDispatchDelete.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/services/graphQL/inventoryInsert/inventoryInsert.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/services/graphQL/inventoryInsert/useInventoryInsert.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/services/graphQL/inventoryOverview/inventoryOverview.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/services/graphQL/inventoryOverview/useInventoryOverview.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/services/graphQL/organizationUnitOffices/organizationUnitOfficesGet.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/services/graphQL/organizationUnitOffices/useOrganizationUnitOfficesGet.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/services/graphQL/organizationUnits/useOrganizationUnits.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/services/graphQL/realEstate/realEstateGet.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/services/graphQL/realEstate/useRealEstateGet.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/services/graphQL/userProfileOverview/useUserProfileOverview.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/services/graphQL/userProfileOverview/userProfileOverview.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/setupTests.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/shared/formStyles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/shared/plusButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/shared/screenWrapper.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/shared/sectionBox.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/types/dropdownData.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/types/environment.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/types/graphQL/classTypes.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/types/graphQL/inventoryAssessment.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/types/graphQL/inventoryDetails.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/types/graphQL/inventoryDispatch.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/types/graphQL/inventoryInsert.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/types/graphQL/inventoryOverview.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/types/graphQL/orderListTypes.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/types/graphQL/organizationUnitOffices.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/types/graphQL/organizationUnits.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/types/graphQL/realEstateOverview.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/types/graphQL/response.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/types/graphQL/settingsDropdownOverview.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/types/graphQL/userProfileOverview.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/types/inventoryProps.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/types/inventoryType.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/types/micro-service-props.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/types/paginationParams.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/types/screen-props.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/utils/createDropdownOptions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/utils/dateUtils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/utils/getRouteName.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/utils/useDebounce.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/utils/useTitle.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/builds/erp/inventory-fe/src/vite-env.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]